---
title: "Totalvi leiden"
namespace: "Workflows/integration"
description: "Run totalVI integration followed by neighbour calculations, leiden clustering and run umap on the result."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `totalvi_leiden`  
Namespace: `workflows/integration`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.0.1/src/workflows/integration/totalvi_leiden/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.0.1 -latest \
  -main-script target/nextflow/workflows/integration/totalvi_leiden/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: "dataset.h5mu"
layer: "log_normalized"
modality: "rna"
prot_modality: "prot"
reference: # please fill in - example: "path/to/file"

# Outputs
# output: "$id.$key.output.h5mu"
# reference_model_path: "totalvi_model_reference"
# query_model_path: "totalvi_model_query"

# General TotalVI Options
obs_batch: "sample_id"
max_epochs: 400
max_query_epochs: 200
weight_decay: 0.0
force_retrain: false
# var_input: "foo"

# TotalVI integration options RNA
rna_reference_modality: "rna"
rna_obsm_output: "X_totalvi"

# TotalVI integration options ADT
prot_reference_modality: "prot"
prot_obsm_output: "X_totalvi"

# Neighbour calculation RNA
rna_uns_neighbors: "totalvi_integration_neighbors"
rna_obsp_neighbor_distances: "totalvi_integration_distances"
rna_obsp_neighbor_connectivities: "totalvi_integration_connectivities"

# Neighbour calculation ADT
prot_uns_neighbors: "totalvi_integration_neighbors"
prot_obsp_neighbor_distances: "totalvi_integration_distances"
prot_obsp_neighbor_connectivities: "totalvi_integration_connectivities"

# Clustering options RNA
rna_obs_cluster: "totalvi_integration_leiden"
rna_leiden_resolution: [1.0]

# Clustering options ADT
prot_obs_cluster: "totalvi_integration_leiden"
prot_leiden_resolution: [1.0]

# Umap options
obsm_umap: "X_totalvi_umap"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.0.1 -latest \
  -profile docker \
  -main-script target/nextflow/workflows/integration/totalvi_leiden/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name              |Description                                                                           |Attributes                                  |
|:----------|:--------------------------------------------------|:--------------------|
|`--id`            |ID of the sample.                                                                     |`string`, required, example: `"foo"`        |
|`--input`         |Path to the sample.                                                                   |`file`, required, example: `"dataset.h5mu"` |
|`--layer`         |use specified layer for expression values instead of the .X object from the modality. |`string`, default: `"log_normalized"`       |
|`--modality`      |Which modality to process.                                                            |`string`, default: `"rna"`                  |
|`--prot_modality` |Which modality to process.                                                            |`string`, default: `"prot"`                 |
|`--reference`     |Input h5mu file with reference data to train the TOTALVI model.                       |`file`, required                            |


### Outputs

|Name                     |Description                                                                          |Attributes                                   |
|:----------|:--------------------------------------------------|:--------------------|
|`--output`               |Destination path to the output.                                                      |`file`, required, example: `"output.h5mu"`   |
|`--reference_model_path` |Directory with the reference model. If not exists, trained model will be saved there |`file`, default: `"totalvi_model_reference"` |
|`--query_model_path`     |Directory, where the query model will be saved                                       |`file`, default: `"totalvi_model_query"`     |


### General TotalVI Options

|Name                 |Description                                                                                                       |Attributes                       |
|:----------|:--------------------------------------------------|:--------------------|
|`--obs_batch`        |.Obs column name discriminating between your batches.                                                             |`string`, default: `"sample_id"` |
|`--max_epochs`       |Number of passes through the dataset                                                                              |`integer`, default: `400`        |
|`--max_query_epochs` |Number of passes through the dataset, when fine-tuning model for query                                            |`integer`, default: `200`        |
|`--weight_decay`     |Weight decay, when fine-tuning model for query                                                                    |`double`, default: `0`           |
|`--force_retrain`    |If true, retrain the model and save it to reference_model_path                                                    |`boolean_true`                   |
|`--var_input`        |Boolean .var column to subset data with (e.g. containing highly variable genes). By default, do not subset genes. |`string`                         |


### TotalVI integration options RNA

|Name                       |Description                                                   |Attributes                       |
|:----------|:--------------------------------------------------|:--------------------|
|`--rna_reference_modality` |                                                              |`string`, default: `"rna"`       |
|`--rna_obsm_output`        |In which .obsm slot to store the normalized RNA from TOTALVI. |`string`, default: `"X_totalvi"` |


### TotalVI integration options ADT

|Name                        |Description                                                            |Attributes                       |
|:----------|:--------------------------------------------------|:--------------------|
|`--prot_reference_modality` |Name of the modality containing proteins in the reference              |`string`, default: `"prot"`      |
|`--prot_obsm_output`        |In which .obsm slot to store the normalized protein data from TOTALVI. |`string`, default: `"X_totalvi"` |


### Neighbour calculation RNA

|Name                                 |Description                                                                             |Attributes                                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--rna_uns_neighbors`                |In which .uns slot to store various neighbor output objects.                            |`string`, default: `"totalvi_integration_neighbors"`      |
|`--rna_obsp_neighbor_distances`      |In which .obsp slot to store the distance matrix between the resulting neighbors.       |`string`, default: `"totalvi_integration_distances"`      |
|`--rna_obsp_neighbor_connectivities` |In which .obsp slot to store the connectivities matrix between the resulting neighbors. |`string`, default: `"totalvi_integration_connectivities"` |


### Neighbour calculation ADT

|Name                                  |Description                                                                             |Attributes                                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--prot_uns_neighbors`                |In which .uns slot to store various neighbor output objects.                            |`string`, default: `"totalvi_integration_neighbors"`      |
|`--prot_obsp_neighbor_distances`      |In which .obsp slot to store the distance matrix between the resulting neighbors.       |`string`, default: `"totalvi_integration_distances"`      |
|`--prot_obsp_neighbor_connectivities` |In which .obsp slot to store the connectivities matrix between the resulting neighbors. |`string`, default: `"totalvi_integration_connectivities"` |


### Clustering options RNA

|Name                      |Description                                                                                                                                                                                                                                                        |Attributes                                          |
|:----------|:--------------------------------------------------|:--------------------|
|`--rna_obs_cluster`       |Prefix for the .obs keys under which to add the cluster labels. Newly created columns in .obs will  be created from the specified value for '--obs_cluster' suffixed with an underscore and one of the resolutions resolutions specified in '--leiden_resolution'. |`string`, default: `"totalvi_integration_leiden"`   |
|`--rna_leiden_resolution` |Control the coarseness of the clustering. Higher values lead to more clusters.                                                                                                                                                                                     |List of `double`, default: `1`, multiple_sep: `";"` |


### Clustering options ADT

|Name                       |Description                                                                                                                                                                                                                                                        |Attributes                                          |
|:----------|:--------------------------------------------------|:--------------------|
|`--prot_obs_cluster`       |Prefix for the .obs keys under which to add the cluster labels. Newly created columns in .obs will  be created from the specified value for '--obs_cluster' suffixed with an underscore and one of the resolutions resolutions specified in '--leiden_resolution'. |`string`, default: `"totalvi_integration_leiden"`   |
|`--prot_leiden_resolution` |Control the coarseness of the clustering. Higher values lead to more clusters.                                                                                                                                                                                     |List of `double`, default: `1`, multiple_sep: `";"` |


### Umap options

|Name          |Description                                                |Attributes                            |
|:----------|:--------------------------------------------------|:--------------------|
|`--obsm_umap` |In which .obsm slot to store the resulting UMAP embedding. |`string`, default: `"X_totalvi_umap"` |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

## Visualisation

```{mermaid}
flowchart TB
    v0(Channel.fromList)
    v2(filter)
    v10(filter)
    v18(totalvi)
    v25(cross)
    v35(cross)
    v42(filter)
    v72(concat)
    v50(find_neighbors)
    v57(cross)
    v67(cross)
    v74(filter)
    v82(leiden)
    v89(cross)
    v99(cross)
    v105(filter)
    v113(move_obsm_to_obs)
    v120(cross)
    v130(cross)
    v137(mix)
    v138(filter)
    v146(umap)
    v153(cross)
    v163(cross)
    v170(filter)
    v200(concat)
    v185(cross)
    v195(cross)
    v202(filter)
    v217(cross)
    v227(cross)
    v233(filter)
    v248(cross)
    v258(cross)
    v265(mix)
    v266(filter)
    v281(cross)
    v291(cross)
    v297(filter)
    v327(concat)
    v305(publish)
    v312(cross)
    v322(cross)
    v334(cross)
    v341(cross)
    v353(cross)
    v360(cross)
    v364(Output)
    subgraph group_totalvi_leiden [totalvi_leiden]
        v178(find_neighbors)
        v210(leiden)
        v241(move_obsm_to_obs)
        v274(umap)
    end
    v137-->v138
    v265-->v266
    v0-->v2
    v2-->v10
    v10-->v18
    v18-->v25
    v10-->v25
    v10-->v35
    v42-->v50
    v50-->v57
    v42-->v57
    v42-->v67
    v67-->v72
    v74-->v82
    v82-->v89
    v74-->v89
    v74-->v99
    v105-->v113
    v113-->v120
    v105-->v120
    v105-->v130
    v138-->v146
    v146-->v153
    v138-->v153
    v138-->v163
    v170-->v178
    v178-->v185
    v170-->v185
    v170-->v195
    v195-->v200
    v202-->v210
    v210-->v217
    v202-->v217
    v202-->v227
    v233-->v241
    v241-->v248
    v233-->v248
    v233-->v258
    v266-->v274
    v274-->v281
    v266-->v281
    v266-->v291
    v297-->v305
    v305-->v312
    v297-->v312
    v297-->v322
    v322-->v327
    v327-->v334
    v2-->v334
    v334-->v341
    v2-->v341
    v2-->v353
    v353-->v360
    v2-->v360
    v360-->v364
    v35-->v42
    v18-->v35
    v50-->v67
    v72-->v74
    v99-->v105
    v82-->v99
    v130-->v137
    v113-->v130
    v72-->v137
    v163-->v170
    v146-->v163
    v178-->v195
    v200-->v202
    v227-->v233
    v210-->v227
    v258-->v265
    v241-->v258
    v200-->v265
    v291-->v297
    v274-->v291
    v305-->v322
    v327-->v353
    style group_totalvi_leiden fill:#F0F0F0,stroke:#969696;
    style v0 fill:#e3dcea,stroke:#7a4baa;
    style v2 fill:#e3dcea,stroke:#7a4baa;
    style v10 fill:#e3dcea,stroke:#7a4baa;
    style v18 fill:#e3dcea,stroke:#7a4baa;
    style v25 fill:#e3dcea,stroke:#7a4baa;
    style v35 fill:#e3dcea,stroke:#7a4baa;
    style v42 fill:#e3dcea,stroke:#7a4baa;
    style v72 fill:#e3dcea,stroke:#7a4baa;
    style v50 fill:#e3dcea,stroke:#7a4baa;
    style v57 fill:#e3dcea,stroke:#7a4baa;
    style v67 fill:#e3dcea,stroke:#7a4baa;
    style v74 fill:#e3dcea,stroke:#7a4baa;
    style v82 fill:#e3dcea,stroke:#7a4baa;
    style v89 fill:#e3dcea,stroke:#7a4baa;
    style v99 fill:#e3dcea,stroke:#7a4baa;
    style v105 fill:#e3dcea,stroke:#7a4baa;
    style v113 fill:#e3dcea,stroke:#7a4baa;
    style v120 fill:#e3dcea,stroke:#7a4baa;
    style v130 fill:#e3dcea,stroke:#7a4baa;
    style v137 fill:#e3dcea,stroke:#7a4baa;
    style v138 fill:#e3dcea,stroke:#7a4baa;
    style v146 fill:#e3dcea,stroke:#7a4baa;
    style v153 fill:#e3dcea,stroke:#7a4baa;
    style v163 fill:#e3dcea,stroke:#7a4baa;
    style v170 fill:#e3dcea,stroke:#7a4baa;
    style v200 fill:#e3dcea,stroke:#7a4baa;
    style v178 fill:#e3dcea,stroke:#7a4baa;
    style v185 fill:#e3dcea,stroke:#7a4baa;
    style v195 fill:#e3dcea,stroke:#7a4baa;
    style v202 fill:#e3dcea,stroke:#7a4baa;
    style v210 fill:#e3dcea,stroke:#7a4baa;
    style v217 fill:#e3dcea,stroke:#7a4baa;
    style v227 fill:#e3dcea,stroke:#7a4baa;
    style v233 fill:#e3dcea,stroke:#7a4baa;
    style v241 fill:#e3dcea,stroke:#7a4baa;
    style v248 fill:#e3dcea,stroke:#7a4baa;
    style v258 fill:#e3dcea,stroke:#7a4baa;
    style v265 fill:#e3dcea,stroke:#7a4baa;
    style v266 fill:#e3dcea,stroke:#7a4baa;
    style v274 fill:#e3dcea,stroke:#7a4baa;
    style v281 fill:#e3dcea,stroke:#7a4baa;
    style v291 fill:#e3dcea,stroke:#7a4baa;
    style v297 fill:#e3dcea,stroke:#7a4baa;
    style v327 fill:#e3dcea,stroke:#7a4baa;
    style v305 fill:#e3dcea,stroke:#7a4baa;
    style v312 fill:#e3dcea,stroke:#7a4baa;
    style v322 fill:#e3dcea,stroke:#7a4baa;
    style v334 fill:#e3dcea,stroke:#7a4baa;
    style v341 fill:#e3dcea,stroke:#7a4baa;
    style v353 fill:#e3dcea,stroke:#7a4baa;
    style v360 fill:#e3dcea,stroke:#7a4baa;
    style v364 fill:#e3dcea,stroke:#7a4baa;

```

