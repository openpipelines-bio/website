---
title: "Convert to MuData"
namespace: "Workflows/ingestion"
description: "A pipeline to convert different file formats to .h5mu."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `conversion`  
Namespace: `workflows/ingestion`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.0/src/workflows/ingestion/conversion/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -main-script target/nextflow/workflows/ingestion/conversion/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: "input.h5mu"
input_type: # please fill in - example: "foo"

# Outputs
# output: "$id.$key.output.h5mu"

# Conversion from h5ad
# modality: ["foo"]

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -profile docker \
  -main-script target/nextflow/workflows/ingestion/conversion/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name           |Description            |Attributes                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--id`         |ID of the sample.      |`string`, required, example: `"foo"`      |
|`--input`      |Path to the sample.    |`file`, required, example: `"input.h5mu"` |
|`--input_type` |Type of the input file |`string`, required                        |


### Outputs

|Name       |Description                            |Attributes                       |
|:----------|:--------------------------------------------------|:--------------------|
|`--output` |Name or template for the output files. |`file`, example: `"output.h5mu"` |


### Conversion from h5ad

|Name         |Description                                                       |Attributes                            |
|:----------|:--------------------------------------------------|:--------------------|
|`--modality` |Name of the modality where the h5ad is stored in the h5mu object. |List of `string`, multiple_sep: `";"` |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author, maintainer)

  * Dries De Maeyer [{{< fa brands github >}}](https://github.com/ddemaeyer) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-de-maeyer-b46a814) (author)

## Visualisation

```{mermaid}
flowchart TB
    v0(Channel.fromList)
    v2(filter)
    v12(filter)
    v20(from_10xh5_to_h5mu)
    v27(cross)
    v37(cross)
    v117(mix)
    v48(filter)
    v56(from_h5ad_to_h5mu)
    v63(cross)
    v73(cross)
    v84(filter)
    v92(from_10xmtx_to_h5mu)
    v99(cross)
    v109(cross)
    v124(cross)
    v131(cross)
    v143(cross)
    v150(cross)
    v154(Output)
    v0-->v2
    v12-->v20
    v20-->v27
    v12-->v27
    v12-->v37
    v48-->v56
    v56-->v63
    v48-->v63
    v48-->v73
    v84-->v92
    v92-->v99
    v84-->v99
    v84-->v109
    v117-->v124
    v2-->v124
    v124-->v131
    v2-->v131
    v2-->v143
    v143-->v150
    v2-->v150
    v150-->v154
    v2-->v12
    v37-->v117
    v20-->v37
    v2-->v48
    v73-->v117
    v56-->v73
    v2-->v84
    v109-->v117
    v92-->v109
    v117-->v143
    style v0 fill:#e3dcea,stroke:#7a4baa;
    style v2 fill:#e3dcea,stroke:#7a4baa;
    style v12 fill:#e3dcea,stroke:#7a4baa;
    style v20 fill:#e3dcea,stroke:#7a4baa;
    style v27 fill:#e3dcea,stroke:#7a4baa;
    style v37 fill:#e3dcea,stroke:#7a4baa;
    style v117 fill:#e3dcea,stroke:#7a4baa;
    style v48 fill:#e3dcea,stroke:#7a4baa;
    style v56 fill:#e3dcea,stroke:#7a4baa;
    style v63 fill:#e3dcea,stroke:#7a4baa;
    style v73 fill:#e3dcea,stroke:#7a4baa;
    style v84 fill:#e3dcea,stroke:#7a4baa;
    style v92 fill:#e3dcea,stroke:#7a4baa;
    style v99 fill:#e3dcea,stroke:#7a4baa;
    style v109 fill:#e3dcea,stroke:#7a4baa;
    style v124 fill:#e3dcea,stroke:#7a4baa;
    style v131 fill:#e3dcea,stroke:#7a4baa;
    style v143 fill:#e3dcea,stroke:#7a4baa;
    style v150 fill:#e3dcea,stroke:#7a4baa;
    style v154 fill:#e3dcea,stroke:#7a4baa;

```

