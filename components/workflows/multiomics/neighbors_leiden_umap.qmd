---
title: "Neighbors leiden umap"
namespace: "Workflows/multiomics"
description: "Performs neighborhood search, leiden clustering and run umap on an integrated embedding."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `neighbors_leiden_umap`  
Namespace: `workflows/multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.0/src/workflows/multiomics/neighbors_leiden_umap/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -main-script target/nextflow/workflows/multiomics/neighbors_leiden_umap/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
input: # please fill in - example: "dataset.h5mu"
obsm_input: # please fill in - example: "foo"
modality: "rna"

# Outputs
# output: "$id.$key.output.h5mu"

# Neighbour calculation
uns_neighbors: # please fill in - example: "foo"
obsp_neighbor_distances: # please fill in - example: "foo"
obsp_neighbor_connectivities: # please fill in - example: "foo"

# Clustering options
# obs_cluster: "foo"
leiden_resolution: [1.0]

# Umap options
# obsm_umap: "foo"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -profile docker \
  -main-script target/nextflow/workflows/multiomics/neighbors_leiden_umap/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name           |Description                               |Attributes                                  |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`      |Path to the sample.                       |`file`, required, example: `"dataset.h5mu"` |
|`--obsm_input` |The key of the embedding to use as input. |`string`, required                          |
|`--modality`   |Which modality to process.                |`string`, default: `"rna"`                  |


### Outputs

|Name       |Description                     |Attributes                                 |
|:----------|:--------------------------------------------------|:--------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### Neighbour calculation

|Name                             |Description                                                                             |Attributes         |
|:----------|:--------------------------------------------------|:--------------------|
|`--uns_neighbors`                |In which .uns slot to store various neighbor output objects.                            |`string`, required |
|`--obsp_neighbor_distances`      |In which .obsp slot to store the distance matrix between the resulting neighbors.       |`string`, required |
|`--obsp_neighbor_connectivities` |In which .obsp slot to store the connectivities matrix between the resulting neighbors. |`string`, required |


### Clustering options

|Name                  |Description                                                                                                                                                                                                                                                        |Attributes                                          |
|:----------|:--------------------------------------------------|:--------------------|
|`--obs_cluster`       |Prefix for the .obs keys under which to add the cluster labels. Newly created columns in .obs will  be created from the specified value for '--obs_cluster' suffixed with an underscore and one of the resolutions resolutions specified in '--leiden_resolution'. |`string`                                            |
|`--leiden_resolution` |Control the coarseness of the clustering. Higher values lead to more clusters.                                                                                                                                                                                     |List of `double`, default: `1`, multiple_sep: `";"` |


### Umap options

|Name          |Description                                                                                               |Attributes |
|:----------|:--------------------------------------------------|:--------------------|
|`--obsm_umap` |In which .obsm slot to store the resulting UMAP embedding. When not specified, UMAP will not be executed. |`string`   |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

## Visualisation

```{mermaid}
flowchart TB
    v0(Channel.fromList)
    v2(filter)
    v11(filter)
    v19(find_neighbors)
    v26(cross)
    v36(cross)
    v45(branch)
    v72(concat)
    v50(leiden)
    v57(cross)
    v67(cross)
    v76(branch)
    v103(concat)
    v81(move_obsm_to_obs)
    v88(cross)
    v98(cross)
    v107(branch)
    v134(concat)
    v112(umap)
    v119(cross)
    v129(cross)
    v141(cross)
    v148(cross)
    v160(cross)
    v167(cross)
    v171(Output)
    v45-->v72
    v76-->v103
    v107-->v134
    v0-->v2
    v2-->v11
    v11-->v19
    v19-->v26
    v11-->v26
    v11-->v36
    v45-->v50
    v50-->v57
    v45-->v57
    v45-->v67
    v67-->v72
    v76-->v81
    v81-->v88
    v76-->v88
    v76-->v98
    v98-->v103
    v107-->v112
    v112-->v119
    v107-->v119
    v107-->v129
    v129-->v134
    v134-->v141
    v2-->v141
    v141-->v148
    v2-->v148
    v2-->v160
    v160-->v167
    v2-->v167
    v167-->v171
    v19-->v36
    v36-->v45
    v50-->v67
    v72-->v76
    v81-->v98
    v103-->v107
    v112-->v129
    v134-->v160
    style v0 fill:#e3dcea,stroke:#7a4baa;
    style v2 fill:#e3dcea,stroke:#7a4baa;
    style v11 fill:#e3dcea,stroke:#7a4baa;
    style v19 fill:#e3dcea,stroke:#7a4baa;
    style v26 fill:#e3dcea,stroke:#7a4baa;
    style v36 fill:#e3dcea,stroke:#7a4baa;
    style v45 fill:#e3dcea,stroke:#7a4baa;
    style v72 fill:#e3dcea,stroke:#7a4baa;
    style v50 fill:#e3dcea,stroke:#7a4baa;
    style v57 fill:#e3dcea,stroke:#7a4baa;
    style v67 fill:#e3dcea,stroke:#7a4baa;
    style v76 fill:#e3dcea,stroke:#7a4baa;
    style v103 fill:#e3dcea,stroke:#7a4baa;
    style v81 fill:#e3dcea,stroke:#7a4baa;
    style v88 fill:#e3dcea,stroke:#7a4baa;
    style v98 fill:#e3dcea,stroke:#7a4baa;
    style v107 fill:#e3dcea,stroke:#7a4baa;
    style v134 fill:#e3dcea,stroke:#7a4baa;
    style v112 fill:#e3dcea,stroke:#7a4baa;
    style v119 fill:#e3dcea,stroke:#7a4baa;
    style v129 fill:#e3dcea,stroke:#7a4baa;
    style v141 fill:#e3dcea,stroke:#7a4baa;
    style v148 fill:#e3dcea,stroke:#7a4baa;
    style v160 fill:#e3dcea,stroke:#7a4baa;
    style v167 fill:#e3dcea,stroke:#7a4baa;
    style v171 fill:#e3dcea,stroke:#7a4baa;

```

