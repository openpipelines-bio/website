---
title: "Process batches"
namespace: "Workflows/multiomics"
description: "This workflow serves as an entrypoint into the 'full_pipeline' in order to re-run the multisample processing and the integration setup."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `process_batches`  
Namespace: `workflows/multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.0.1/src/workflows/multiomics/process_batches/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::

An input .h5mu file will 
first be split in order to run the multisample processing per modality. Next, the modalities
are merged again and the integration setup pipeline is executed. Please note that this workflow
assumes that samples from multiple pipelines are already concatenated. 


## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.0.1 -latest \
  -main-script target/nextflow/workflows/multiomics/process_batches/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: ["input.h5mu"]
# rna_layer: "foo"
# prot_layer: "foo"

# Outputs
# output: "$id.$key.output.h5mu"

# Highly variable features detection
highly_variable_features_var_output: "filter_with_hvg"
highly_variable_features_obs_batch_key: "sample_id"

# QC metrics calculation options
var_qc_metrics: ["filter_with_hvg"]
top_n_vars: [50, 100, 200, 500]

# PCA options
pca_overwrite: false

# CLR options
clr_axis: 0

# RNA Scaling options
rna_enable_scaling: false
rna_scaling_output_layer: "scaled"
rna_scaling_pca_obsm_output: "scaled_pca"
rna_scaling_pca_loadings_varm_output: "scaled_pca_loadings"
rna_scaling_pca_variance_uns_output: "scaled_pca_variance"
rna_scaling_umap_obsm_output: "scaled_umap"
# rna_scaling_max_value: 123.0
rna_scaling_zero_center: true

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.0.1 -latest \
  -profile docker \
  -main-script target/nextflow/workflows/multiomics/process_batches/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name           |Description                                                                  |Attributes                                                             |
|:----------|:--------------------------------------------------|:--------------------|
|`--id`         |ID of the sample.                                                            |`string`, required, example: `"foo"`                                   |
|`--input`      |Path to the sample.                                                          |List of `file`, required, example: `"input.h5mu"`, multiple_sep: `";"` |
|`--rna_layer`  |Input layer for the gene expression modality. If not specified, .X is used.  |`string`                                                               |
|`--prot_layer` |Input layer for the antibody capture modality. If not specified, .X is used. |`string`                                                               |


### Outputs

|Name       |Description                     |Attributes                                 |
|:----------|:--------------------------------------------------|:--------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### Highly variable features detection

|Name                                       |Description                                                                                                                                                                                                    |Attributes                             |
|:----------|:--------------------------------------------------|:--------------------|
|`--highly_variable_features_var_output`    |In which .var slot to store a boolean array corresponding to the highly variable genes.                                                                                                                        |`string`, default: `"filter_with_hvg"` |
|`--highly_variable_features_obs_batch_key` |If specified, highly-variable genes are selected within each batch separately and merged. This simple  process avoids the selection of batch-specific genes and acts as a lightweight batch correction method. |`string`, default: `"sample_id"`       |


### QC metrics calculation options

|Name               |Description                                                                                                                                                                                                                    |Attributes                                                                                             |
|:----------|:--------------------------------------------------|:--------------------|
|`--var_qc_metrics` |Keys to select a boolean (containing only True or False) column from .var. For each cell, calculate the proportion of total values for genes which are labeled 'True',  compared to the total sum of the values for all genes. |List of `string`, default: `"filter_with_hvg"`, example: `"ercc,highly_variable"`, multiple_sep: `","` |
|`--top_n_vars`     |Number of top vars to be used to calculate cumulative proportions. If not specified, proportions are not calculated. `--top_n_vars 20,50` finds cumulative proportion to the 20th and 50th most expressed vars.                |List of `integer`, default: `50, 100, 200, 500`, multiple_sep: `","`                                   |


### PCA options

|Name              |Description                             |Attributes     |
|:----------|:--------------------------------------------------|:--------------------|
|`--pca_overwrite` |Allow overwriting slots for PCA output. |`boolean_true` |


### CLR options

|Name         |Description                                |Attributes              |
|:----------|:--------------------------------------------------|:--------------------|
|`--clr_axis` |Axis to perform the CLR transformation on. |`integer`, default: `0` |


### RNA Scaling options

Options for enabling scaling of the log-normalized data to unit variance and zero mean.
The scaled data will be output a different layer and representation with reduced dimensions
will be created and stored in addition to the non-scaled data.



|Name                                     |Description                                                                                                                                                  |Attributes                                 |
|:----------|:--------------------------------------------------|:--------------------|
|`--rna_enable_scaling`                   |Enable scaling for the RNA modality.                                                                                                                         |`boolean_true`                             |
|`--rna_scaling_output_layer`             |Output layer where the scaled log-normalized data will be stored.                                                                                            |`string`, default: `"scaled"`              |
|`--rna_scaling_pca_obsm_output`          |Name of the .obsm key where the PCA representation of the log-normalized and scaled data is stored.                                                          |`string`, default: `"scaled_pca"`          |
|`--rna_scaling_pca_loadings_varm_output` |Name of the .varm key where the PCA loadings of the log-normalized and scaled data is stored.                                                                |`string`, default: `"scaled_pca_loadings"` |
|`--rna_scaling_pca_variance_uns_output`  |Name of the .uns key where the variance and variance ratio will be stored as a map. The map will contain two keys: variance and variance_ratio respectively. |`string`, default: `"scaled_pca_variance"` |
|`--rna_scaling_umap_obsm_output`         |Name of the .obsm key where the UMAP representation of the log-normalized and scaled data is stored.                                                         |`string`, default: `"scaled_umap"`         |
|`--rna_scaling_max_value`                |Clip (truncate) data to this value after scaling. If not specified, do not clip.                                                                             |`double`                                   |
|`--rna_scaling_zero_center`              |If set, omit zero-centering variables, which allows to handle sparse input efficiently."                                                                     |`boolean_false`                            |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author, maintainer)

## Visualisation

```{mermaid}
flowchart TB
    v0(Channel.fromList)
    v2(filter)
    v11(filter)
    v22(filter)
    v34(cross)
    v44(cross)
    v54(concat)
    v61(cross)
    v71(cross)
    v77(flatMap)
    v85(filter)
    v93(filter)
    v108(cross)
    v118(cross)
    v124(filter)
    v139(cross)
    v149(cross)
    v155(filter)
    v170(cross)
    v180(cross)
    v189(branch)
    v216(concat)
    v201(cross)
    v211(cross)
    v217(filter)
    v232(cross)
    v242(cross)
    v248(filter)
    v374(concat)
    v258(filter)
    v273(cross)
    v283(cross)
    v290(mix)
    v291(filter)
    v306(cross)
    v316(cross)
    v322(filter)
    v352(concat)
    v337(cross)
    v347(cross)
    v359(cross)
    v369(cross)
    v381(cross)
    v391(cross)
    v592(mix)
    v402(filter)
    v410(filter)
    v425(cross)
    v435(cross)
    v441(filter)
    v567(concat)
    v451(filter)
    v466(cross)
    v476(cross)
    v483(mix)
    v484(filter)
    v499(cross)
    v509(cross)
    v515(filter)
    v545(concat)
    v530(cross)
    v540(cross)
    v552(cross)
    v562(cross)
    v574(cross)
    v584(cross)
    v594(mix)
    v602(filter)
    v610(merge)
    v617(cross)
    v627(cross)
    v637(branch)
    v756(concat)
    v642(filter)
    v657(cross)
    v667(cross)
    v673(filter)
    v688(cross)
    v698(cross)
    v704(filter)
    v734(concat)
    v719(cross)
    v729(cross)
    v741(cross)
    v751(cross)
    v760(branch)
    v879(concat)
    v765(filter)
    v780(cross)
    v790(cross)
    v796(filter)
    v811(cross)
    v821(cross)
    v827(filter)
    v857(concat)
    v842(cross)
    v852(cross)
    v864(cross)
    v874(cross)
    v883(branch)
    v1002(concat)
    v888(filter)
    v903(cross)
    v913(cross)
    v919(filter)
    v934(cross)
    v944(cross)
    v950(filter)
    v980(concat)
    v965(cross)
    v975(cross)
    v987(cross)
    v997(cross)
    v1003(filter)
    v1033(concat)
    v1011(publish)
    v1018(cross)
    v1028(cross)
    v1040(cross)
    v1047(cross)
    v1059(cross)
    v1066(cross)
    v1070(Output)
    subgraph group_split_modalities_workflow [split_modalities_workflow]
        v27(split_modalities_component)
    end
    subgraph group_rna_multisample [rna_multisample]
        v101(normalize_total)
        v132(log1p)
        v163(delete_layer)
        v194(scale)
        v225(highly_variable_features_scanpy)
        v266(grep_annotation_column)
        v299(calculate_qc_metrics)
        v330(publish)
    end
    subgraph group_prot_multisample [prot_multisample]
        v418(clr)
        v459(grep_annotation_column)
        v492(calculate_qc_metrics)
        v523(publish)
    end
    subgraph group_dimensionality_reduction_rna [dimensionality_reduction_rna]
        v650(pca)
        v681(find_neighbors)
        v712(umap)
    end
    subgraph group_dimensionality_reduction_scaling_rna [dimensionality_reduction_scaling_rna]
        v773(pca)
        v804(find_neighbors)
        v835(umap)
    end
    subgraph group_dimensionality_reduction_prot [dimensionality_reduction_prot]
        v896(pca)
        v927(find_neighbors)
        v958(umap)
    end
    v189-->v216
    v216-->v217
    v290-->v291
    v483-->v484
    v592-->v594
    v637-->v756
    v760-->v879
    v883-->v1002
    v1002-->v1003
    v0-->v2
    v22-->v27
    v27-->v34
    v22-->v34
    v22-->v44
    v54-->v61
    v11-->v61
    v11-->v71
    v85-->v93
    v93-->v101
    v101-->v108
    v93-->v108
    v93-->v118
    v124-->v132
    v132-->v139
    v124-->v139
    v124-->v149
    v155-->v163
    v163-->v170
    v155-->v170
    v155-->v180
    v189-->v194
    v194-->v201
    v189-->v201
    v189-->v211
    v211-->v216
    v217-->v225
    v225-->v232
    v217-->v232
    v217-->v242
    v258-->v266
    v266-->v273
    v258-->v273
    v258-->v283
    v291-->v299
    v299-->v306
    v291-->v306
    v291-->v316
    v322-->v330
    v330-->v337
    v322-->v337
    v322-->v347
    v347-->v352
    v352-->v359
    v248-->v359
    v248-->v369
    v369-->v374
    v374-->v381
    v85-->v381
    v85-->v391
    v402-->v410
    v410-->v418
    v418-->v425
    v410-->v425
    v410-->v435
    v451-->v459
    v459-->v466
    v451-->v466
    v451-->v476
    v484-->v492
    v492-->v499
    v484-->v499
    v484-->v509
    v515-->v523
    v523-->v530
    v515-->v530
    v515-->v540
    v540-->v545
    v545-->v552
    v441-->v552
    v441-->v562
    v562-->v567
    v567-->v574
    v402-->v574
    v402-->v584
    v602-->v610
    v610-->v617
    v602-->v617
    v602-->v627
    v637-->v642
    v642-->v650
    v650-->v657
    v642-->v657
    v642-->v667
    v673-->v681
    v681-->v688
    v673-->v688
    v673-->v698
    v704-->v712
    v712-->v719
    v704-->v719
    v704-->v729
    v729-->v734
    v734-->v741
    v637-->v741
    v637-->v751
    v751-->v756
    v760-->v765
    v765-->v773
    v773-->v780
    v765-->v780
    v765-->v790
    v796-->v804
    v804-->v811
    v796-->v811
    v796-->v821
    v827-->v835
    v835-->v842
    v827-->v842
    v827-->v852
    v852-->v857
    v857-->v864
    v760-->v864
    v760-->v874
    v874-->v879
    v883-->v888
    v888-->v896
    v896-->v903
    v888-->v903
    v888-->v913
    v919-->v927
    v927-->v934
    v919-->v934
    v919-->v944
    v950-->v958
    v958-->v965
    v950-->v965
    v950-->v975
    v975-->v980
    v980-->v987
    v883-->v987
    v883-->v997
    v997-->v1002
    v1003-->v1011
    v1011-->v1018
    v1003-->v1018
    v1003-->v1028
    v1028-->v1033
    v1033-->v1040
    v2-->v1040
    v1040-->v1047
    v2-->v1047
    v2-->v1059
    v1059-->v1066
    v2-->v1066
    v1066-->v1070
    v2-->v11
    v71-->v77
    v11-->v22
    v44-->v54
    v27-->v44
    v54-->v71
    v77-->v85
    v391-->v592
    v118-->v124
    v101-->v118
    v149-->v155
    v132-->v149
    v163-->v180
    v180-->v189
    v194-->v211
    v242-->v248
    v225-->v242
    v248-->v258
    v283-->v290
    v266-->v283
    v248-->v290
    v316-->v322
    v299-->v316
    v330-->v347
    v352-->v369
    v374-->v391
    v77-->v402
    v584-->v592
    v435-->v441
    v418-->v435
    v441-->v451
    v476-->v483
    v459-->v476
    v441-->v483
    v509-->v515
    v492-->v509
    v523-->v540
    v545-->v562
    v567-->v584
    v77-->v594
    v594-->v602
    v610-->v627
    v627-->v637
    v667-->v673
    v650-->v667
    v698-->v704
    v681-->v698
    v712-->v729
    v734-->v751
    v756-->v760
    v790-->v796
    v773-->v790
    v821-->v827
    v804-->v821
    v835-->v852
    v857-->v874
    v879-->v883
    v913-->v919
    v896-->v913
    v944-->v950
    v927-->v944
    v958-->v975
    v980-->v997
    v1011-->v1028
    v1033-->v1059
    style group_split_modalities_workflow fill:#F0F0F0,stroke:#969696;
    style group_rna_multisample fill:#F0F0F0,stroke:#969696;
    style group_prot_multisample fill:#F0F0F0,stroke:#969696;
    style group_dimensionality_reduction_rna fill:#F0F0F0,stroke:#969696;
    style group_dimensionality_reduction_scaling_rna fill:#F0F0F0,stroke:#969696;
    style group_dimensionality_reduction_prot fill:#F0F0F0,stroke:#969696;
    style v0 fill:#e3dcea,stroke:#7a4baa;
    style v2 fill:#e3dcea,stroke:#7a4baa;
    style v11 fill:#e3dcea,stroke:#7a4baa;
    style v22 fill:#e3dcea,stroke:#7a4baa;
    style v27 fill:#e3dcea,stroke:#7a4baa;
    style v34 fill:#e3dcea,stroke:#7a4baa;
    style v44 fill:#e3dcea,stroke:#7a4baa;
    style v54 fill:#e3dcea,stroke:#7a4baa;
    style v61 fill:#e3dcea,stroke:#7a4baa;
    style v71 fill:#e3dcea,stroke:#7a4baa;
    style v77 fill:#e3dcea,stroke:#7a4baa;
    style v85 fill:#e3dcea,stroke:#7a4baa;
    style v93 fill:#e3dcea,stroke:#7a4baa;
    style v101 fill:#e3dcea,stroke:#7a4baa;
    style v108 fill:#e3dcea,stroke:#7a4baa;
    style v118 fill:#e3dcea,stroke:#7a4baa;
    style v124 fill:#e3dcea,stroke:#7a4baa;
    style v132 fill:#e3dcea,stroke:#7a4baa;
    style v139 fill:#e3dcea,stroke:#7a4baa;
    style v149 fill:#e3dcea,stroke:#7a4baa;
    style v155 fill:#e3dcea,stroke:#7a4baa;
    style v163 fill:#e3dcea,stroke:#7a4baa;
    style v170 fill:#e3dcea,stroke:#7a4baa;
    style v180 fill:#e3dcea,stroke:#7a4baa;
    style v189 fill:#e3dcea,stroke:#7a4baa;
    style v216 fill:#e3dcea,stroke:#7a4baa;
    style v194 fill:#e3dcea,stroke:#7a4baa;
    style v201 fill:#e3dcea,stroke:#7a4baa;
    style v211 fill:#e3dcea,stroke:#7a4baa;
    style v217 fill:#e3dcea,stroke:#7a4baa;
    style v225 fill:#e3dcea,stroke:#7a4baa;
    style v232 fill:#e3dcea,stroke:#7a4baa;
    style v242 fill:#e3dcea,stroke:#7a4baa;
    style v248 fill:#e3dcea,stroke:#7a4baa;
    style v374 fill:#e3dcea,stroke:#7a4baa;
    style v258 fill:#e3dcea,stroke:#7a4baa;
    style v266 fill:#e3dcea,stroke:#7a4baa;
    style v273 fill:#e3dcea,stroke:#7a4baa;
    style v283 fill:#e3dcea,stroke:#7a4baa;
    style v290 fill:#e3dcea,stroke:#7a4baa;
    style v291 fill:#e3dcea,stroke:#7a4baa;
    style v299 fill:#e3dcea,stroke:#7a4baa;
    style v306 fill:#e3dcea,stroke:#7a4baa;
    style v316 fill:#e3dcea,stroke:#7a4baa;
    style v322 fill:#e3dcea,stroke:#7a4baa;
    style v352 fill:#e3dcea,stroke:#7a4baa;
    style v330 fill:#e3dcea,stroke:#7a4baa;
    style v337 fill:#e3dcea,stroke:#7a4baa;
    style v347 fill:#e3dcea,stroke:#7a4baa;
    style v359 fill:#e3dcea,stroke:#7a4baa;
    style v369 fill:#e3dcea,stroke:#7a4baa;
    style v381 fill:#e3dcea,stroke:#7a4baa;
    style v391 fill:#e3dcea,stroke:#7a4baa;
    style v592 fill:#e3dcea,stroke:#7a4baa;
    style v402 fill:#e3dcea,stroke:#7a4baa;
    style v410 fill:#e3dcea,stroke:#7a4baa;
    style v418 fill:#e3dcea,stroke:#7a4baa;
    style v425 fill:#e3dcea,stroke:#7a4baa;
    style v435 fill:#e3dcea,stroke:#7a4baa;
    style v441 fill:#e3dcea,stroke:#7a4baa;
    style v567 fill:#e3dcea,stroke:#7a4baa;
    style v451 fill:#e3dcea,stroke:#7a4baa;
    style v459 fill:#e3dcea,stroke:#7a4baa;
    style v466 fill:#e3dcea,stroke:#7a4baa;
    style v476 fill:#e3dcea,stroke:#7a4baa;
    style v483 fill:#e3dcea,stroke:#7a4baa;
    style v484 fill:#e3dcea,stroke:#7a4baa;
    style v492 fill:#e3dcea,stroke:#7a4baa;
    style v499 fill:#e3dcea,stroke:#7a4baa;
    style v509 fill:#e3dcea,stroke:#7a4baa;
    style v515 fill:#e3dcea,stroke:#7a4baa;
    style v545 fill:#e3dcea,stroke:#7a4baa;
    style v523 fill:#e3dcea,stroke:#7a4baa;
    style v530 fill:#e3dcea,stroke:#7a4baa;
    style v540 fill:#e3dcea,stroke:#7a4baa;
    style v552 fill:#e3dcea,stroke:#7a4baa;
    style v562 fill:#e3dcea,stroke:#7a4baa;
    style v574 fill:#e3dcea,stroke:#7a4baa;
    style v584 fill:#e3dcea,stroke:#7a4baa;
    style v594 fill:#e3dcea,stroke:#7a4baa;
    style v602 fill:#e3dcea,stroke:#7a4baa;
    style v610 fill:#e3dcea,stroke:#7a4baa;
    style v617 fill:#e3dcea,stroke:#7a4baa;
    style v627 fill:#e3dcea,stroke:#7a4baa;
    style v637 fill:#e3dcea,stroke:#7a4baa;
    style v756 fill:#e3dcea,stroke:#7a4baa;
    style v642 fill:#e3dcea,stroke:#7a4baa;
    style v650 fill:#e3dcea,stroke:#7a4baa;
    style v657 fill:#e3dcea,stroke:#7a4baa;
    style v667 fill:#e3dcea,stroke:#7a4baa;
    style v673 fill:#e3dcea,stroke:#7a4baa;
    style v681 fill:#e3dcea,stroke:#7a4baa;
    style v688 fill:#e3dcea,stroke:#7a4baa;
    style v698 fill:#e3dcea,stroke:#7a4baa;
    style v704 fill:#e3dcea,stroke:#7a4baa;
    style v734 fill:#e3dcea,stroke:#7a4baa;
    style v712 fill:#e3dcea,stroke:#7a4baa;
    style v719 fill:#e3dcea,stroke:#7a4baa;
    style v729 fill:#e3dcea,stroke:#7a4baa;
    style v741 fill:#e3dcea,stroke:#7a4baa;
    style v751 fill:#e3dcea,stroke:#7a4baa;
    style v760 fill:#e3dcea,stroke:#7a4baa;
    style v879 fill:#e3dcea,stroke:#7a4baa;
    style v765 fill:#e3dcea,stroke:#7a4baa;
    style v773 fill:#e3dcea,stroke:#7a4baa;
    style v780 fill:#e3dcea,stroke:#7a4baa;
    style v790 fill:#e3dcea,stroke:#7a4baa;
    style v796 fill:#e3dcea,stroke:#7a4baa;
    style v804 fill:#e3dcea,stroke:#7a4baa;
    style v811 fill:#e3dcea,stroke:#7a4baa;
    style v821 fill:#e3dcea,stroke:#7a4baa;
    style v827 fill:#e3dcea,stroke:#7a4baa;
    style v857 fill:#e3dcea,stroke:#7a4baa;
    style v835 fill:#e3dcea,stroke:#7a4baa;
    style v842 fill:#e3dcea,stroke:#7a4baa;
    style v852 fill:#e3dcea,stroke:#7a4baa;
    style v864 fill:#e3dcea,stroke:#7a4baa;
    style v874 fill:#e3dcea,stroke:#7a4baa;
    style v883 fill:#e3dcea,stroke:#7a4baa;
    style v1002 fill:#e3dcea,stroke:#7a4baa;
    style v888 fill:#e3dcea,stroke:#7a4baa;
    style v896 fill:#e3dcea,stroke:#7a4baa;
    style v903 fill:#e3dcea,stroke:#7a4baa;
    style v913 fill:#e3dcea,stroke:#7a4baa;
    style v919 fill:#e3dcea,stroke:#7a4baa;
    style v927 fill:#e3dcea,stroke:#7a4baa;
    style v934 fill:#e3dcea,stroke:#7a4baa;
    style v944 fill:#e3dcea,stroke:#7a4baa;
    style v950 fill:#e3dcea,stroke:#7a4baa;
    style v980 fill:#e3dcea,stroke:#7a4baa;
    style v958 fill:#e3dcea,stroke:#7a4baa;
    style v965 fill:#e3dcea,stroke:#7a4baa;
    style v975 fill:#e3dcea,stroke:#7a4baa;
    style v987 fill:#e3dcea,stroke:#7a4baa;
    style v997 fill:#e3dcea,stroke:#7a4baa;
    style v1003 fill:#e3dcea,stroke:#7a4baa;
    style v1033 fill:#e3dcea,stroke:#7a4baa;
    style v1011 fill:#e3dcea,stroke:#7a4baa;
    style v1018 fill:#e3dcea,stroke:#7a4baa;
    style v1028 fill:#e3dcea,stroke:#7a4baa;
    style v1040 fill:#e3dcea,stroke:#7a4baa;
    style v1047 fill:#e3dcea,stroke:#7a4baa;
    style v1059 fill:#e3dcea,stroke:#7a4baa;
    style v1066 fill:#e3dcea,stroke:#7a4baa;
    style v1070 fill:#e3dcea,stroke:#7a4baa;

```

