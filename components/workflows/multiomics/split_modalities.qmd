---
title: "Split modalities"
namespace: "Workflows/multiomics"
description: "A pipeline to split a multimodal mudata files into several unimodal mudata files."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `split_modalities`  
Namespace: `workflows/multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.2/src/workflows/multiomics/split_modalities/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.2 -latest \
  -main-script target/nextflow/workflows/multiomics/split_modalities/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: "input.h5mu"

# Outputs
# output: "$id.$key.output"
# output_types: "$id.$key.output_types.csv"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.2 -latest \
  -profile docker \
  -main-script target/nextflow/workflows/multiomics/split_modalities/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name      |Description         |Attributes                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--id`    |ID of the sample.   |`string`, required, example: `"foo"`      |
|`--input` |Path to the sample. |`file`, required, example: `"input.h5mu"` |


### Outputs

|Name             |Description                                                           |Attributes                                     |
|:----------|:--------------------------------------------------|:--------------------|
|`--output`       |Output directory containing multiple h5mu files.                      |`file`, required, example: `"/path/to/output"` |
|`--output_types` |A csv containing the base filename and modality type per output file. |`file`, required, example: `"types.csv"`       |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author, maintainer)

## Visualisation

```{mermaid}
flowchart TB
    v0(Channel.fromList)
    v2(filter)
    v13(filter)
    v18(split_modalities_component)
    v25(cross)
    v35(cross)
    v45(concat)
    v52(cross)
    v59(cross)
    v71(cross)
    v78(cross)
    v82(Output)
    v0-->v2
    v13-->v18
    v18-->v25
    v13-->v25
    v13-->v35
    v45-->v52
    v2-->v52
    v52-->v59
    v2-->v59
    v2-->v71
    v71-->v78
    v2-->v78
    v78-->v82
    v2-->v13
    v35-->v45
    v18-->v35
    v45-->v71
    style v0 fill:#e3dcea,stroke:#7a4baa;
    style v2 fill:#e3dcea,stroke:#7a4baa;
    style v13 fill:#e3dcea,stroke:#7a4baa;
    style v18 fill:#e3dcea,stroke:#7a4baa;
    style v25 fill:#e3dcea,stroke:#7a4baa;
    style v35 fill:#e3dcea,stroke:#7a4baa;
    style v45 fill:#e3dcea,stroke:#7a4baa;
    style v52 fill:#e3dcea,stroke:#7a4baa;
    style v59 fill:#e3dcea,stroke:#7a4baa;
    style v71 fill:#e3dcea,stroke:#7a4baa;
    style v78 fill:#e3dcea,stroke:#7a4baa;
    style v82 fill:#e3dcea,stroke:#7a4baa;

```

