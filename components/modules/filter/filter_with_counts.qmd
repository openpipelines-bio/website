---
title: "Filter with counts"
namespace: "Filter"
description: "Filter scRNA-seq data based on the primary QC metrics."
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `filter_with_counts`  
Namespace: `filter`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.1/src/filter/filter_with_counts/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::


This is based on both the UMI counts, the gene counts 
and the mitochondrial genes (genes starting with mt/MT)

## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.1 -latest \
  -main-script target/nextflow/filter/filter_with_counts/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
input: # please fill in - example: "input.h5mu"
modality: "rna"
# layer: "raw_counts"

# Outputs
# output: "$id.$key.output.h5mu"
# output_compression: "gzip"
do_subset: false
obs_name_filter: "filter_with_counts"
var_name_filter: "filter_with_counts"

# Arguments
# min_counts: 200
# max_counts: 5000000
# min_genes_per_cell: 200
# max_genes_per_cell: 1500000
# min_cells_per_gene: 3

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.1 -latest \
  -profile docker \
  -main-script target/nextflow/filter/filter_with_counts/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name         |Description     |Attributes                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`    |Input h5mu file |`file`, required, example: `"input.h5mu"` |
|`--modality` |                |`string`, default: `"rna"`                |
|`--layer`    |                |`string`, example: `"raw_counts"`         |


### Outputs

|Name                   |Description                                                                                        |Attributes                                |
|:----------|:--------------------------------------------------|:--------------------|
|`--output`             |Output h5mu file.                                                                                  |`file`, example: `"output.h5mu"`          |
|`--output_compression` |The compression format to be used on the output h5mu object.                                       |`string`, example: `"gzip"`               |
|`--do_subset`          |Whether to subset before storing the output.                                                       |`boolean_true`                            |
|`--obs_name_filter`    |In which .obs slot to store a boolean array corresponding to which observations should be removed. |`string`, default: `"filter_with_counts"` |
|`--var_name_filter`    |In which .var slot to store a boolean array corresponding to which variables should be removed.    |`string`, default: `"filter_with_counts"` |


### Arguments

|Name                   |Description                                 |Attributes                    |
|:----------|:--------------------------------------------------|:--------------------|
|`--min_counts`         |Minimum number of counts captured per cell. |`integer`, example: `200`     |
|`--max_counts`         |Maximum number of counts captured per cell. |`integer`, example: `5000000` |
|`--min_genes_per_cell` |Minimum of non-zero values per cell.        |`integer`, example: `200`     |
|`--max_genes_per_cell` |Maximum of non-zero values per cell.        |`integer`, example: `1500000` |
|`--min_cells_per_gene` |Minimum of non-zero values per gene.        |`integer`, example: `3`       |

## Authors


  * Dries De Maeyer [{{< fa brands github >}}](https://github.com/ddemaeyer) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-de-maeyer-b46a814) (author)

  * Robrecht Cannoodt [{{< fa brands github >}}](https://github.com/rcannood) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-3641-729X) [{{< fa brands linkedin >}}](https://linkedin.com/in/robrechtcannoodt) (maintainer, author)

