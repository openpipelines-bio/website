---
title: "Concatenate h5mu"
namespace: "Dataflow"
description: "Concatenate observations from samples in several (uni- and/or multi-modal) MuData files into a single file"
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `concatenate_h5mu`  
Namespace: `dataflow`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/v2.1.0-rc.2/src/dataflow/concatenate_h5mu/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r v2.1.0-rc.2 -latest \
  -main-script target/nextflow/dataflow/concatenate_h5mu/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Arguments
input: # please fill in - example: ["sample_paths"]
# modality: ["foo"]
# input_id: ["foo"]
# output: "$id.$key.output.h5mu"
# output_compression: "gzip"
obs_sample_name: "sample_id"
other_axis_mode: "move"
uns_merge_mode: "make_unique"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r v2.1.0-rc.2 -latest \
  -profile docker \
  -main-script target/nextflow/dataflow/concatenate_h5mu/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument group

### Arguments

|Name                   |Description|Attributes                                                               |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`              |Paths to the different samples to be concatenated|List of `file`, required, example: `"sample_paths"`, multiple_sep: `";"` |
|`--modality`           |Only output concatenated objects for the provided modalities. Outputs all modalities by default.                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |List of `string`, multiple_sep: `";"`                                    |
|`--input_id`           |Names of the different samples that have to be concatenated.  Must be specified when using '--mode move'. In this case, the ids will be used for the columns names of the dataframes registring the conflicts. If specified, must be of same length as `--input`.                                                                                                                                                                                                                                                                                                           |List of `string`, multiple_sep: `";"`                                    |
|`--output`             ||`file`, example: `"output.h5mu"`                                         |
|`--output_compression` |The compression format to be used on the output h5mu object.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |`string`, example: `"gzip"`                                              |
|`--obs_sample_name`    |Name of the .obs key under which to add the sample names|`string`, default: `"sample_id"`                                         |
|`--other_axis_mode`    |How to handle the merging of other axis (var, obs, ...).    - None: keep no data   - same: only keep elements of the matrices which are the same in each of the samples   - unique: only keep elements for which there is only 1 possible value (1 value that can occur in multiple samples)   - first: keep the annotation from the first sample   - only: keep elements that show up in only one of the objects (1 unique element in only 1 sample)   - move: identical to 'same', but moving the conflicting values to .varm or .obsm                                    |`string`, default: `"move"`                                              |
|`--uns_merge_mode`     |How to handle the merging of .uns across modalities   - None: keep no data   - same: only keep elements of the matrices which are the same in each of the samples   - unique: only keep elements for which there is only 1 possible value (1 value that can occur in multiple samples)   - first: keep the annotation from the first sample   - only: keep elements that show up in only one of the objects (1 unique element in only 1 sample)   - make_unique: identical to 'unique', but keys which are not unique are made unique by prefixing them with the sample id. |`string`, default: `"make_unique"`                                       |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (maintainer)

