---
title: "Build star reference"
namespace: "Reference"
description: "Create a reference for STAR from a set of fasta files."
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `build_star_reference`  
Namespace: `reference`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.0/src/reference/build_star_reference/config.vsh.yml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -main-script target/nextflow/reference/build_star_reference/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Input/Output
genome_fasta: # please fill in - example: ["chr1.fasta", "chr2.fasta"]
# transcriptome_gtf: "path/to/file"
# output: "$id.$key.output"

# Genome indexing arguments
genomeSAindexNbases: 14

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"

# Arguments
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -profile docker \
  -main-script target/nextflow/reference/build_star_reference/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Input/Output

|Name                  |Description                                                                                                                                                                                                                                                     |Attributes                                                                           |
|:----------|:--------------------------------------------------|:--------------------|
|`--genome_fasta`      |The fasta files to be included in the reference. Corresponds to the --genomeFastaFiles argument in the STAR command.                                                                                                                                            |List of `file`, required, example: `"chr1.fasta", "chr2.fasta"`, multiple_sep: `";"` |
|`--transcriptome_gtf` |Specifies the path to the file with annotated transcripts in the standard GTF format. STAR will extract splice junctions from this file and use them to greatly improve accuracy of the mapping. Corresponds to the --sjdbGTFfile argument in the STAR command. |`file`                                                                               |
|`--output`            |Path to output directory. Corresponds to the --genomeDir argument in the STAR command.                                                                                                                                                                          |`file`, required, example: `"/path/to/foo"`                                          |


### Genome indexing arguments

|Name                    |Description                                                                                                                                                                                                                                                     |Attributes               |
|:----------|:--------------------------------------------------|:--------------------|
|`--genomeSAindexNbases` |Length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter {genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1). |`integer`, default: `14` |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

