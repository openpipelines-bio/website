---
title: "Clr"
namespace: "Transform"
description: "Perform CLR normalization on CITE-seq data (Stoeckius et al., 2017)"
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `clr`  
Namespace: `transform`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.1/src/transform/clr/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.1 -latest \
  -main-script target/nextflow/transform/clr/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Arguments
input: # please fill in - example: "input.h5mu"
modality: "prot"
# output: "output.h5mu"
# output_compression: "gzip"
# input_layer: "foo"
# output_layer: "foo"
axis: 0

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.1 -latest \
  -profile docker \
  -main-script target/nextflow/transform/clr/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument group

### Arguments

|Name                   |Description                                                                                                                                           |Attributes                                 |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`              |Input h5mu file                                                                                                                                       |`file`, required, example: `"input.h5mu"`  |
|`--modality`           |                                                                                                                                                      |`string`, default: `"prot"`                |
|`--output`             |Output h5mu file.                                                                                                                                     |`file`, required, default: `"output.h5mu"` |
|`--output_compression` |The compression format to be used on the output h5mu object.                                                                                          |`string`, example: `"gzip"`                |
|`--input_layer`        |Input layer to use. By default, .X is used.                                                                                                           |`string`                                   |
|`--output_layer`       |Output layer to use. By default, use X.                                                                                                               |`string`                                   |
|`--axis`               |Axis across which CLR is performed. If set to 0, CLR is performed across observations (cells). If set to 1, CLR is performed across features (genes). |`integer`, default: `0`                    |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (maintainer)

