---
title: "Multiqc"
namespace: "Qc"
description: "MultiQC aggregates results from bioinformatics analyses across many samples into a single report."
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `multiqc`  
Namespace: `qc`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.0/src/qc/multiqc/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::

It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools

## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -main-script target/nextflow/qc/multiqc/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Arguments
input: # please fill in - example: ["input.txt"]
# output: "$id.$key.output"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -profile docker \
  -main-script target/nextflow/qc/multiqc/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument group

### Arguments

|Name       |Description                                      |Attributes                                                            |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`  |Inputs for MultiQC.                              |List of `file`, required, example: `"input.txt"`, multiple_sep: `";"` |
|`--output` |Create report in the specified output directory. |`file`, required, example: `"report"`                                 |

