---
title: "Cellranger atac count"
namespace: "Mapping"
description: "Align fastq files using Cell Ranger ATAC count."
type: "module"
toc: false
---

::: {.column-margin}

### Info

ID: `cellranger_atac_count`  
Namespace: `mapping`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/2.1.0/src/mapping/cellranger_atac_count/config.vsh.yaml){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -main-script target/nextflow/mapping/cellranger_atac_count/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
input: # please fill in - example: ["sample_S1_L001_R1_001.fastq.gz", "sample_S1_L001_R2_001.fastq.gz"]
reference: # please fill in - example: "reference.tar.gz"

# Outputs
# output: "$id.$key.output"

# Arguments
description: ""
# force_cells: 123
# peaks: "path/to/file"
dim_reduce: "lsa"
# subsample_rate: 0.1
# lanes: ["1,3"]

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 2.1.0 -latest \
  -profile docker \
  -main-script target/nextflow/mapping/cellranger_atac_count/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name          |Description                                                                            |Attributes                                                                                                                   |
|:----------|:--------------------------------------------------|:--------------------|
|`--input`     |The fastq.gz files to align. Can also be a single directory containing fastq.gz files. |List of `file`, required, example: `"sample_S1_L001_R1_001.fastq.gz", "sample_S1_L001_R2_001.fastq.gz"`, multiple_sep: `";"` |
|`--reference` |The path to Cell Ranger reference tar.gz file. Can also be a directory.                |`file`, required, example: `"reference.tar.gz"`                                                                              |


### Outputs

|Name       |Description                                |Attributes                                     |
|:----------|:--------------------------------------------------|:--------------------|
|`--output` |The folder to store the alignment results. |`file`, required, example: `"/path/to/output"` |


### Arguments

|Name               |Description                                                                                                                                                                                                                                                                     |Attributes                                              |
|:----------|:--------------------------------------------------|:--------------------|
|`--description`    |Sample description to embed in output files                                                                                                                                                                                                                                     |`string`, default: `""`                                 |
|`--force_cells`    |Define the top N barcodes with the most fragments overlapping peaks as cells and override the cell calling algorithm. N must be a positive integer <= 20,000. Use this option if the number of cells estimated by Cell Ranger ATAC is not consistent with the barcode rank plot |`integer`                                               |
|`--peaks`          |Override peak caller: specify peaks to use in downstream analyses from supplied 3-column BED file. The supplied peaks file must be sorted by position and not contain overlapping peaks; comment lines beginning with # are allowed                                             |`file`                                                  |
|`--dim_reduce`     |Dimensionality reduction mode for clustering                                                                                                                                                                                                                                    |`string`, default: `"lsa"`                              |
|`--subsample_rate` |Downsample to preserve this fraction of reads                                                                                                                                                                                                                                   |`double`, example: `0.1`                                |
|`--lanes`          |bcl2fastq option. Semicolon-delimited series of lanes to demultiplex. Use this if you have a sample sheet for an entire flow cell but only want to generate a few lanes for further 10x Genomics analysis.                                                                      |List of `string`, example: `"1,3"`, multiple_sep: `";"` |

## Authors


  * Vladimir Shitov [{{< fa brands github >}}](https://github.com/vladimirshitov) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-1960-8812) [{{< fa brands linkedin >}}](https://linkedin.com/in/vladimir-shitov-9a659513b) (author)

